{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ADMIN/Desktop/BeatAware/beataware/src/app/components/ui/HeartChart.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\n\r\ninterface HeartChartProps {\r\n  data: { time: string; bpm: number }[];\r\n}\r\n\r\nexport default function HeartChart({ data }: HeartChartProps) {\r\n  return (\r\n    <ResponsiveContainer width=\"100%\" height={280}>\r\n      <LineChart data={data}>\r\n        <CartesianGrid stroke=\"#eee\" strokeDasharray=\"5 5\" />\r\n        <XAxis dataKey=\"time\" />\r\n        <YAxis domain={[40, 180]} />\r\n        <Tooltip />\r\n        <Line\r\n          type=\"monotone\"\r\n          dataKey=\"bpm\"\r\n          stroke=\"#e11d48\"\r\n          strokeWidth={2}\r\n          dot={false}\r\n        />\r\n      </LineChart>\r\n    </ResponsiveContainer>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;;;AAgBe,SAAS,WAAW,KAAyB;QAAzB,EAAE,IAAI,EAAmB,GAAzB;IACjC,qBACE,kOAAC,kOAAmB;QAAC,OAAM;QAAO,QAAQ;kBACxC,cAAA,kOAAC,0MAAS;YAAC,MAAM;;8BACf,kOAAC,sNAAa;oBAAC,QAAO;oBAAO,iBAAgB;;;;;;8BAC7C,kOAAC,sMAAK;oBAAC,SAAQ;;;;;;8BACf,kOAAC,sMAAK;oBAAC,QAAQ;wBAAC;wBAAI;qBAAI;;;;;;8BACxB,kOAAC,0MAAO;;;;;8BACR,kOAAC,oMAAI;oBACH,MAAK;oBACL,SAAQ;oBACR,QAAO;oBACP,aAAa;oBACb,KAAK;;;;;;;;;;;;;;;;;AAKf;KAlBwB","debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ADMIN/Desktop/BeatAware/beataware/src/app/dashboard/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport HeartChart from \"../components/ui/HeartChart\";\r\nimport { Heart, Activity, AlertTriangle } from \"lucide-react\";\r\n\r\nexport default function Dashboard() {\r\n  const [bpmData, setBpmData] = useState<{ time: string; bpm: number }[]>([]);\r\n  const [currentBpm, setCurrentBpm] = useState<number>(0);\r\n\r\n  // Simulated real-time updates\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const bpm = 60 + Math.floor(Math.random() * 40); // simulate 60â€“100 bpm\r\n      setCurrentBpm(bpm);\r\n      const now = new Date();\r\n      setBpmData((prev) => {\r\n        const newData = [...prev, { time: now.toLocaleTimeString(), bpm }];\r\n        return newData.slice(-20); // keep last 20 points\r\n      });\r\n    }, 2000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <main className=\"min-h-screen bg-gray-50 p-6\">\r\n      <h1 className=\"text-2xl font-semibold mb-6\">Heart Monitor Dashboard</h1>\r\n\r\n      {/* Chart Section */}\r\n      <div className=\"bg-white rounded-2xl shadow p-6 mb-6\">\r\n        <h2 className=\"text-lg font-medium mb-4\">Live Heart Rate</h2>\r\n        <HeartChart data={bpmData} />\r\n      </div>\r\n\r\n      {/* Vitals Section */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n        <div className=\"bg-white p-4 rounded-xl shadow flex items-center gap-3\">\r\n          <Heart className=\"w-6 h-6 text-red-500\" />\r\n          <div>\r\n            <p className=\"text-sm text-gray-500\">Pulse</p>\r\n            <p className=\"text-lg font-bold\">{currentBpm} bpm</p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white p-4 rounded-xl shadow flex items-center gap-3\">\r\n          <Activity className=\"w-6 h-6 text-green-500\" />\r\n          <div>\r\n            <p className=\"text-sm text-gray-500\">Status</p>\r\n            <p className=\"text-lg font-bold\">\r\n              {currentBpm >= 60 && currentBpm <= 100 ? \"Normal\" : \"Alert\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white p-4 rounded-xl shadow flex items-center gap-3\">\r\n          <AlertTriangle className=\"w-6 h-6 text-yellow-500\" />\r\n          <div>\r\n            <p className=\"text-sm text-gray-500\">Alerts</p>\r\n            <p className=\"text-lg font-bold\">\r\n              {currentBpm < 60 || currentBpm > 100 ? \"High Risk\" : \"None\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAAA;AAAA;;;AAJA;;;;AAMe,SAAS;;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,8MAAQ,EAAkC,EAAE;IAC1E,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,8MAAQ,EAAS;IAErD,8BAA8B;IAC9B,IAAA,+MAAS;+BAAC;YACR,MAAM,WAAW;gDAAY;oBAC3B,MAAM,MAAM,KAAK,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,KAAK,sBAAsB;oBACvE,cAAc;oBACd,MAAM,MAAM,IAAI;oBAChB;wDAAW,CAAC;4BACV,MAAM,UAAU;mCAAI;gCAAM;oCAAE,MAAM,IAAI,kBAAkB;oCAAI;gCAAI;6BAAE;4BAClE,OAAO,QAAQ,KAAK,CAAC,CAAC,KAAK,sBAAsB;wBACnD;;gBACF;+CAAG;YACH;uCAAO,IAAM,cAAc;;QAC7B;8BAAG,EAAE;IAEL,qBACE,kOAAC;QAAK,WAAU;;0BACd,kOAAC;gBAAG,WAAU;0BAA8B;;;;;;0BAG5C,kOAAC;gBAAI,WAAU;;kCACb,kOAAC;wBAAG,WAAU;kCAA2B;;;;;;kCACzC,kOAAC,gMAAU;wBAAC,MAAM;;;;;;;;;;;;0BAIpB,kOAAC;gBAAI,WAAU;;kCACb,kOAAC;wBAAI,WAAU;;0CACb,kOAAC,qPAAK;gCAAC,WAAU;;;;;;0CACjB,kOAAC;;kDACC,kOAAC;wCAAE,WAAU;kDAAwB;;;;;;kDACrC,kOAAC;wCAAE,WAAU;;4CAAqB;4CAAW;;;;;;;;;;;;;;;;;;;kCAIjD,kOAAC;wBAAI,WAAU;;0CACb,kOAAC,8PAAQ;gCAAC,WAAU;;;;;;0CACpB,kOAAC;;kDACC,kOAAC;wCAAE,WAAU;kDAAwB;;;;;;kDACrC,kOAAC;wCAAE,WAAU;kDACV,cAAc,MAAM,cAAc,MAAM,WAAW;;;;;;;;;;;;;;;;;;kCAK1D,kOAAC;wBAAI,WAAU;;0CACb,kOAAC,iRAAa;gCAAC,WAAU;;;;;;0CACzB,kOAAC;;kDACC,kOAAC;wCAAE,WAAU;kDAAwB;;;;;;kDACrC,kOAAC;wCAAE,WAAU;kDACV,aAAa,MAAM,aAAa,MAAM,cAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOnE;GA5DwB;KAAA","debugId":null}}]
}